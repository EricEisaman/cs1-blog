{"version":3,"sources":["webpack:////rbd/pnpm-volume/164bf88b-ffe5-4c0f-8578-325b7c2a47a8/node_modules/.registry.npmjs.org/@chakra-ui/core/0.7.0/node_modules/@chakra-ui/core/dist/es/Image/index.js","webpack:///./src/pages/index.js"],"names":["NativeImage","_ref","ref","htmlWidth","htmlHeight","alt","props","width","height","Image","src","fallbackSrc","onError","onLoad","ignoreFallback","rest","hasLoaded","_props$enabled","enabled","isMounted","_useState","setHasLoaded","image","window","onload","event","current","onerror","useHasImageLoaded","Boolean","imageProps","Box","as","displayName","IndexPage","data","useColorMode","toggleColorMode","Helmet","property","content","name","Heading","allMarkdownRemark","totalCount","edges","map","node","maxW","key","id","to","fields","slug","css","size","frontmatter","title","date","excerpt","query"],"mappings":"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","file":"component---src-pages-index-js-47b8b28dc1e05dd82ec3.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { useEffect, useState, forwardRef, useRef } from \"react\";\nimport Box from \"../Box\";\nexport function useHasImageLoaded(props) {\n  var src = props.src,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      _props$enabled = props.enabled,\n      enabled = _props$enabled === void 0 ? true : _props$enabled;\n  var isMounted = useRef(true);\n\n  var _useState = useState(false),\n      hasLoaded = _useState[0],\n      setHasLoaded = _useState[1];\n\n  useEffect(function () {\n    if (!src || !enabled) {\n      return;\n    }\n\n    var image = new window.Image();\n    image.src = src;\n\n    image.onload = function (event) {\n      if (isMounted.current) {\n        setHasLoaded(true);\n        onLoad && onLoad(event);\n      }\n    };\n\n    image.onerror = function (event) {\n      if (isMounted.current) {\n        setHasLoaded(false);\n        onError && onError(event);\n      }\n    };\n  }, [src, onLoad, onError, enabled]);\n  useEffect(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return hasLoaded;\n}\nvar NativeImage = forwardRef(function (_ref, ref) {\n  var htmlWidth = _ref.htmlWidth,\n      htmlHeight = _ref.htmlHeight,\n      alt = _ref.alt,\n      props = _objectWithoutPropertiesLoose(_ref, [\"htmlWidth\", \"htmlHeight\", \"alt\"]);\n\n  return jsx(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, props));\n});\nvar Image = forwardRef(function (props, ref) {\n  var src = props.src,\n      fallbackSrc = props.fallbackSrc,\n      onError = props.onError,\n      onLoad = props.onLoad,\n      ignoreFallback = props.ignoreFallback,\n      rest = _objectWithoutPropertiesLoose(props, [\"src\", \"fallbackSrc\", \"onError\", \"onLoad\", \"ignoreFallback\"]);\n\n  var hasLoaded = useHasImageLoaded({\n    src: src,\n    onLoad: onLoad,\n    onError: onError,\n    enabled: !Boolean(ignoreFallback)\n  });\n  var imageProps = ignoreFallback ? {\n    src: src,\n    onLoad: onLoad,\n    onError: onError\n  } : {\n    src: hasLoaded ? src : fallbackSrc\n  };\n  return jsx(Box, _extends({\n    as: NativeImage,\n    ref: ref\n  }, imageProps, rest));\n});\nImage.displayName = \"Image\";\nexport default Image;","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Box, Button, Heading, Text, Image, useColorMode } from \"@chakra-ui/core\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function IndexPage({ data }) {\n  const { toggleColorMode } = useColorMode();\n  return (\n    <Layout>\n      <Helmet>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta name='description' content='Creating masterful 3D multiplayer games!'></meta>\n        <meta property='og:title' content=\"CS1 Blog\"/>\n        <meta property='og:image' content=\"https://cdn.glitch.com/a0dd9fe7-3870-4571-800d-38e4a02ec0d8%2FCS1%20Banner%20with%20Background_flip.png?v=1593460056003\"/>\n        <meta property=\"og:description\" content=\"Creating masterful 3D multiplayer games!\"/>\n        <meta property=\"og:url\" content=\"//cs1.netlify.app\" />\n        <meta name=\"twitter:site\" content=\"@CS1_Game_Engine\" />\n        <meta name=\"twitter:title\" content=\"CS1 Game Engine Blog\" />\n        <meta name=\"twitter:description\" content=\"The CS1 Game Engine enables easy design of 3D multiplayer VR-ready games which can be installed as Progressive Web Applications (PWAs).\" />\n        <meta name=\"twitter:image\" content=\"https://cdn.glitch.com/a0dd9fe7-3870-4571-800d-38e4a02ec0d8%2FCS1%20Banner%20with%20Background_flip.png?v=1593460056003\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      </Helmet>\n      <Box>\n        <Image src=\"https://cdn.glitch.com/53f6eb06-66f0-4243-b635-db0bfec50c28%2FCS1_Banner.png?v=1589051460395\"/>\n        <Heading>CS1 Blog</Heading>\n        <hr></hr>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <Box  maxW=\"sm\" key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <Heading as=\"h6\" size=\"xs\">\n                {node.frontmatter.title}{\" \"}\n                <span\n                  css={css`\n                    color: #555;\n                  `}\n                >\n                  â€” {node.frontmatter.date}\n                </span>\n              </Heading>\n              <div>{node.excerpt}</div>\n            </Link>\n          </Box>\n        ))}\n        \n    \n        \n      </Box>\n      \n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}